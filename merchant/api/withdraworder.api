syntax = "v1"

info(
    title: "type title here"
    desc: "type desc here"
    author: "type author here"
    email: "type email here"
    version: "type version here"
)

type RespData {
    WithdrawOrderNo string `json:"withdrawOrderNo"`
    Sign string `json:"sign"`
}

type WithdrawApiOrderRequest {
    MerchantId string `json:"merchantId"`
    Sign string `json:"sign"`
    NotifyUrl string `json:"notifyUrl"`
    PageUrl string `json:"pageUrl, optional"`
    WithdrawName string `json:"withdrawName"`
    BankName string `json:"bankName"`
    AccountNo string `json:"accountNo"`
    BankProvince string `json:"bankProvince, optional"`
    BankCity string `json:"bankCity, optional"`
    OrderAmount string `json:"orderAmount"`
    Language string `json:"language"`
    OrderNo string `json:"orderNo"`
    Currency string`json:"currency"`
    PtBalanceId string `json:"ptBalanceId, optional"`
}

type WithdrawApiOrderResponse {
    RespCode string `json:"respCode"`
    RespMsg string `json:"respMsg"`
    RespData RespData `json:"data"`
    Trace string `json:"trace"`
}

type WithdrawApiQueryRequest {
    MerchantId string `json:"merchantId"`
    OrderNo string `json:"orderNo"`
    Sign string `json:"sign"`
}

type WithdrawApiQueryResponse {
    RespCode string `json:"respCode"`
    RespMsg string `json:"respMsg"`
    OrderStatus string `json:"orderStatus"`
    MerchantId string `json:"merchantId"`
    OrderAmount string `json:"orderAmount"`
    Sign string `json:"sign"`
}

type ProxyPayOrderRequest {
    AccessType string `json:"accessType" validate:"max=2"`
    MerchantId string `json:"merchantId" validate:"required"`
    Sign string `json:"sign" validate:"required"`
    NotifyUrl string `json:"notifyUrl" validate:"required"`
    Language string `json:"language" validate:"required"`
                                                      //========      求参数(業務參數)===========
    OrderNo string `json:"orderNo" validate:"required"`
    BankId string `json:"bankId,optional"`
    BankName string `json:"bankName" validate:"required"`
    BankProvince string `json:"bankProvince,optional"`
    BankCity string `json:"bankCity,optional"`
    BranchName string `json:"branchName,optional"`
    BankNo string `json:"bankNo" validate:"required"`
    OrderAmount string `json:"orderAmount, optional"` //到小數兩位
    DefrayName string `json:"defrayName" validate:"required"`
    DefrayId string `json:"defrayId, optional"`
    DefrayMobile string `json:"defrayMobile, optional"`
    DefrayEmail string `json:"defrayEmail, optional"`
    Currency string `json:"currency" validate:"required"`
    PayTypeSubNo string `json:"payTypeSubNo,optional"`
    PlayerId string `json:"playerId, optional"`
    Remark string `json:"remark, optional"`
}

type ProxyPayOrderQueryRequest struct {
    AccessType string `json:"accessType" valiate:"required"`
    MerchantId string `json:"merchantId" valiate:"required"`
    OrderNo string `json:"orderNo" valiate:"required"`
    Sign string `json:"sign" valiate:"required"`
    Language string `json:"language" valiate:"required"`
}

type SystemRate {
    ID                   int64   `json:"id"`
    CurrencyCode         string  `json:"currencyCode"`
    WithdrawHandlingFee  float64 `json:"withdrawHandlingFee"`
    MinWithdrawCharge    float64 `json:"minWithdrawCharge"`
    MaxWithdrawCharge    float64 `json:"maxWithdrawCharge"`
    CreatedBy            string  `json:"createdBy"`
    UpdatedBy            string  `json:"updatedBy"`
}

@server(
    group: withdraworder
    prefix: dior/merchant-api
)
service merchant-api {
    @handler WithdrawApiOrderHandler
    post /withdraw-order (WithdrawApiOrderRequest) returns (WithdrawApiOrderResponse)

    @handler WithdrawApiQueryHandler
    post /withdraw-query (WithdrawApiQueryRequest) returns (WithdrawApiQueryResponse)

    @handler WithdrawApiTestCallBackHandler
    post /withdraw-test-callback () returns (string)

    @handler WithdrawProxyPayApiOrderHandler
    post /withdraw-order-by-proxy (ProxyPayOrderRequest) returns (WithdrawApiOrderResponse)

    @handler WithdrawProxyPayApiQueryHandler
    post /withdraw-query-by-proxy (ProxyPayOrderQueryRequest) returns (WithdrawApiQueryResponse)
}
